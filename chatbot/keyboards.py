from aiogram.filters.callback_data import CallbackData
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
from aiogram.types import ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from main import tokens as db_tokens, users
from main import users_tokens


# –û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–Ω–∏–∑—É
main_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text='–ú–µ–Ω—é'), KeyboardButton(text='–ü–æ–¥–ø–∏—Å–∫–∏'), KeyboardButton(text='–û –±–æ—Ç–µ')]
    ],
    resize_keyboard=True,
)

# Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"
start = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text='–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏', url='https://yandex.ru/search/?clid=2456108&text=–ü–æ–ª–∏—Ç–∏–∫–∞+–∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏&l10n=ru&lr=18')],
        [InlineKeyboardButton(text='–°–æ–≥–ª–∞—Å–∏—Ç—å—Å—è', callback_data='agreement')]
    ]
)

# Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∫–æ–º–∞–Ω–¥—ã "–û –±–æ—Ç–µ"
help = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text='üßæWiki-—Å—Ç—Ä–∞–Ω–∏—Ü–∞', url='https://se.cs.petrsu.ru/wiki/KGx2')],
        [InlineKeyboardButton(text='‚¨õGitHub', url='https://github.com/SanKdrv/KGx2')],
    ]
)

async def checktokens_message(userID):
    text = '–í—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞: '
    tokens_list = []

    user_tokens = users_tokens.get_tokens_by_user(userID)

    db_tokens_list = db_tokens.get_tikers()

    for token in db_tokens_list:
        tokenID = int(db_tokens.get_token_ID(token))
        if tokenID in user_tokens:
            tokens_list.append(token)

    # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É —Å —Ç–æ–∫–µ–Ω–∞–º–∏, —Å–æ–µ–¥–∏–Ω—è—è –∏—Ö —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é
    formatted_tokens = ', '.join(tokens_list)
    if len(formatted_tokens) > len(text):
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã –∫ –Ω–∞—á–∞–ª—É —Å–æ–æ–±—â–µ–Ω–∏—è
        full_text = f"{text}{formatted_tokens}"
    else:
        full_text = f"{text}–ù–∏—á–µ–≥–æ"

    return full_text


class Pagination(CallbackData, prefix='pag'):
    action: str
    page: int

# Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∫–æ–º–∞–Ω–¥—ã "–ú–µ–Ω—é"
async def inline_tokens_kb(userID, page: int=0):
    # –ü–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ TokenID
    menu = InlineKeyboardBuilder()  # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ InlineKeyboardBuilder
    start_offset = page * 5  # –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–º–µ—â–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–æ–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    limit = 5  # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    end_offset = start_offset + limit  # –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –∫–æ–Ω–µ—á–Ω–æ–≥–æ —Å–º–µ—â–µ–Ω–∏—è

    user_tokens = users_tokens.get_tokens_by_user(userID)

    for token in db_tokens.get_tikers()[start_offset:end_offset]:
        tokenID = int(db_tokens.get_token_ID(token))
        if tokenID in user_tokens:
            menu.row(InlineKeyboardButton(text=f'{token} ‚úî', callback_data=f'token_subscription:{tokenID}:{page}'))
        else:
            menu.row(InlineKeyboardButton(text=f'{token.split(":")[-1]} ‚ùå', callback_data=f'token_subscription:{tokenID}:{page}'))
    buttons_row = []
    if page > 0:
        buttons_row.append(InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data=Pagination(action="prev", page=page - 1).pack()))  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–Ω–∞–∑–∞–¥"
    if end_offset < len(db_tokens.get_tikers()):  # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –µ—â—ë –µ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        buttons_row.append(InlineKeyboardButton(text="‚û°Ô∏è", callback_data=Pagination(action="next", page=page + 1).pack()))  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–≤–ø–µ—Ä–µ–¥"
    else:  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å
        buttons_row.append(InlineKeyboardButton(text="‚û°Ô∏è", callback_data=Pagination(action="next", page=0).pack()))  # –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –Ω–∞ –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    menu.row(*buttons_row)  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    menu.row(InlineKeyboardButton(text="–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –≤—Å–µ—Ö", callback_data=f'tokens_unsubscribe:{page}'))
    return menu.as_markup()  # –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤ –≤–∏–¥–µ —Ä–∞–∑–º–µ—Ç–∫–∏ üí©
