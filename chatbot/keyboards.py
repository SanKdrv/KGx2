from aiogram.filters.callback_data import CallbackData
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
from aiogram.types import ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton


# –û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–Ω–∏–∑—É
main_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text='–ú–µ–Ω—é'), KeyboardButton(text='–û –±–æ—Ç–µ')]
    ],
    resize_keyboard=True,
)

# Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"
start = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text='–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏', url='https://yandex.ru/search/?clid=2456108&text=–ü–æ–ª–∏—Ç–∏–∫–∞+–∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏&l10n=ru&lr=18')],
        [InlineKeyboardButton(text='–°–æ–≥–ª–∞—Å–∏—Ç—å—Å—è', callback_data='agreement')]
    ]
)

# Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∫–æ–º–∞–Ω–¥—ã "–û –±–æ—Ç–µ"
help = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text='üßæWiki-—Å—Ç—Ä–∞–Ω–∏—Ü–∞', url='https://se.cs.petrsu.ru/wiki/KGx2')],
        [InlineKeyboardButton(text='‚¨õGitHub', url='https://github.com/SanKdrv/KGx2')],
    ]
)

# –ü–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã Tokens –ø–∞—Ä TokenID : Tiker
db_tokens = {'00': 'BTC', '01': 'ETH', '02': 'THE', '03': 'DOGE', '04': 'PEPE'}
user_subscriptions = ['00', '03', '04']

class Pagination(CallbackData, prefix='pag'):
    action: str
    page: int

# Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∫–æ–º–∞–Ω–¥—ã "–ú–µ–Ω—é"
async def inline_tokens_kb(page=0):
    # –ü–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ TokenID
    menu = InlineKeyboardBuilder()

    for tokenID in db_tokens.keys():
        if tokenID in user_subscriptions:
            menu.row(InlineKeyboardButton(text=f'{db_tokens[tokenID]} ‚úî', callback_data=f'token_subscription:{tokenID}'))
        else:
            menu.row(InlineKeyboardButton(text=f'{db_tokens[tokenID]} ‚ùå', callback_data=f'token_subscription:{tokenID}'))

    # for tokenID in db_tokens.keys():
    #     if tokenID in user_subscriptions:
    #         menu.add(InlineKeyboardButton(text=f'{db_tokens[tokenID]} ‚úî', callback_data=f'token_subscription:{tokenID}'))
    #     else:
    #         menu.add(InlineKeyboardButton(text=f'{db_tokens[tokenID]} ‚ùå', callback_data=f'token_subscription:{tokenID}'))
    return menu.adjust(1).as_markup()

